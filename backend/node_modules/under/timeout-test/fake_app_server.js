var http = require('http'),
    server;

var debugging = !!process.env.DEBUG;

exports.start = function(opts, cb) {

  var opts = opts || {};

  var max = opts.max || 100,
      port = opts.port || default_port,
      backlog = opts.backlog || 1000,
      delay = opts.delay || 0,
      debug = opts.debug || false;

  var pending = [],
      total = 0,
      active = 0;

  var log = function(str){
    if (debugging)
      console.log(str);
  }

  var getHeader = function(req){
    var temp = {
      code: 200,
      header: {
        'Content-Type': 'text/html',
        'Connection': 'close'
      }
    }

    if (req.method != 'GET')
      temp.code = 422; // asume data was sent but was wrong
    else if (!req.headers['user-agent'] || req.headers['user-agent'].indexOf('Prey') == -1)
      temp.code = 404;

    return temp;
  }

  var getResponse = function(res){

    setTimeout(function(){
      res.writeHead(res.temp.code, res.temp.header)
      res.end('Hello world from fake app server (e.g. unicorn).');
      endResponse();
    }, delay);

  };

    var emptyQueue = function(){
      log("Queue is empty.");
    }

  var endResponse = function(){
    --active || emptyQueue();
    checkRequests();
  }

  var checkRequests = function(){

    log("Active: " + active + ". Pending: " + pending.length);;

    if (pending.length > 0 && active < max){
      ++active;
      var res = pending.pop();
      getResponse(res);
    }

  }

  server = http.createServer(function(req, res){

    log('Backend request: ' + req.method + ' ' + req.url);
    res.id = total;
    res.temp = getHeader(req);
    pending.push(res);
    log(pending.length + " pending.");
    checkRequests();

  });

  server._backlog = backlog;
  server.listen(port, cb);

  log("Test backend server listening on port " + port);
  return server;

}

exports.stop = function(cb){
  if (server) server.close(cb);
  else cb();
}