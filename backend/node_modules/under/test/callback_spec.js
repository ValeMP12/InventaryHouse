var http   = require('http'),
    needle = require('needle'),
    should = require('should'),
    proxy  = require('../').proxy;

var ports = {
  inner: 4444,
  outer: 5555
}

describe('when backend request timeouts', function() {

  var frontend, 
      proxy_request; // to hold the function later

  var backend = http.createServer(function(req, res) {
    res.writeHeader(200, { 'Content-Type': 'text/plain' })
    res.end('Okay mister');
  })

  before(function(done) {
    frontend = http.createServer(function(req, res) {
      proxy_request(req, res);
    });

    backend.listen(ports.inner, function() {
      frontend.listen(ports.outer, done)
    })
  })

  after(function(done) {
    frontend.close(function() {
      backend.close(done);
    })
  })

  it('callbacks as expected', function(done) {
    
    var error,
        called = false;

    var opts = {
      backend: {
        host: 'localhost',
        port: ports.inner
      }
    }   
    
    proxy_request = function(req, res) {
      proxy.send(req, res, opts, function(err) {
        called = true;
        error  = err;
      })
    }
    
    needle.get('localhost:' + ports.outer, function(err, resp) {
      resp.body.should.equal('Okay mister');
      should.not.exist(err);
      called.should.be.true;
      done()
    })

  })

})
