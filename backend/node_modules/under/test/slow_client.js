var http   = require('http'),
    needle = require('needle'),
    should = require('should'),
    queue  = require('../').queue;

var ports = {
  inner: 4444,
  outer: 5555
}

describe('when backend request timeouts', function() {

  var frontend;

  var backend = http.createServer(function(req, res) {
    res.writeHeader(200, { 'Content-Type': 'text/plain' })
    res.end('Okay mister');
  })

  before(function(done) {

    var handler = queue.setup({
      debug: false,
      timeout: 500,
      backend: {
        host: 'localhost',
        port: ports.inner
      }
    })

    frontend = http.createServer(handler);

    backend.listen(ports.inner, function() {
      frontend.listen(ports.outer, done)
    })
  })

  after(function(done) {
    frontend.close(function() {
      backend.close(done);
    })
  })

  it('does not emit errors', function(done) {
    var e;
    
    var req = http.request({
      method: 'POST',
      path: '/',
      host: 'localhost',
      port: ports.outer
    });
        
    setTimeout(function() {
      req.end('Hello');
    }, 1000);
    
    req.on('error', function(e) {
      error = e;
    })
    
    req.on('response', function(resp) {
      
      resp.on('error', function() {
        error = e;
      })

      resp.on('readable', function() {
        while (chunk = this.read()) {
          // console.log('got %d bytes of data', chunk.length);
        }
      })

      resp.on('end', function() {
        should.not.exist(e);
        done();
      })
    })
    
  })

})
