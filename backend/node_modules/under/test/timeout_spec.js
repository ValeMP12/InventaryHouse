var http   = require('http'),
    needle = require('needle'),
    should = require('should'),
    proxy  = require('../').proxy;

var ports = {
  inner: 4444,
  outer: 5555
}

describe('when backend request timeouts', function() {

  var frontend;

  var backend = http.createServer(function(req, res) {
    // do nothing
  })

  before(function(done) {

    var handler = proxy.setup({
      debug: false,
      timeout: 500,
      backend: {
        host: 'localhost',
        port: ports.inner
      }
    })

    frontend = http.createServer(handler);

    backend.listen(ports.inner, function() {
      frontend.listen(ports.outer, done)
    })
  })

  after(function(done) {
    frontend.close(function() {
      backend.close(done);
    })
  })

  it('does not break the connection', function(done) {
    needle.get('localhost:' + ports.outer, function(err, resp, body) {
      should.not.exist(err);
      done();
    })
  })

  it('returns a 502', function(done) {
    needle.get('localhost:' + ports.outer, function(err, resp, body) {
      resp.statusCode.should.equal(502);
      done();
    })
  })

})
